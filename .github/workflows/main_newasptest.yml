name: Build and deploy ASP app to Azure Web App - newasptest

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore asptest.sln

      - name: Build project
        run: msbuild /nologo /verbosity:m /t:Build /p:Configuration=Release asptest.sln

      # Sprawdź, czy folder 'published' już istnieje
      - name: List files before publish
        run: |
          echo "Listing contents of the working directory before publish:"
          dir $GITHUB_WORKSPACE

      # Upewnij się, że folder 'published' istnieje
      - name: Create 'published' folder if not exists
        run: |
          if (!(Test-Path "$GITHUB_WORKSPACE/published")) {
            New-Item -ItemType Directory -Path "$GITHUB_WORKSPACE/published"
          }

      # Publikacja aplikacji do folderu 'published'
      - name: Publish to folder
        run: msbuild /nologo /verbosity:m /t:Publish /p:Configuration=Release /p:PublishDir="$GITHUB_WORKSPACE/published" asptest.sln

      # Debugowanie zawartości folderu 'published'
      - name: Debug publish folder contents
        run: |
          echo "Contents of the 'published' folder:"
          dir "$GITHUB_WORKSPACE/published"

      # Uploadowanie artefaktu do Azure
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ASP-app
          path: "$GITHUB_WORKSPACE/published/**"

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ASP-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'newasptest'
          slot-name: 'Production'
          package: "$GITHUB_WORKSPACE/published"
